<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.sourceforge.pmd</groupId>
    <artifactId>pmd-ui</artifactId>
    <name>PMD Designer</name>
    <version>6.28.0-SNAPSHOT</version>

    <description>The Rule Designer is a graphical tool that helps PMD users develop their custom rules.</description>
    <url>https://pmd.github.io</url>
    <inceptionYear>2017</inceptionYear>
    <licenses>
        <license>
            <name>BSD-2-Clause</name>
            <url>http://pmd.sourceforge.net/license.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git://github.com/pmd/pmd-designer.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/pmd/pmd-designer.git</developerConnection>
        <url>https://github.com/pmd/pmd-designer</url>
        <tag>HEAD</tag>
    </scm>
    <ciManagement>
        <url>https://github.com/pmd/pmd-designer/actions</url>
    </ciManagement>
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
    <developers>
        <developer>
            <id>oowekyala</id>
            <name>Clément Fournier</name>
            <email>clement.fournier76@gmail.com</email>
        </developer>
        <developer>
            <id>jsotuyod</id>
            <name>Juan Martín Sotuyo Dodero</name>
            <email>juansotuyo@gmail.com</email>
        </developer>
        <developer>
            <id>adangel</id>
            <name>Andreas Dangel</name>
            <email>adangel@users.sourceforge.net</email>
        </developer>
    </developers>

    <properties>
        <pmd.core.version>6.27.0</pmd.core.version>
        <openjfx.version>11.0.2</openjfx.version>
        <java.version>8</java.version>
        <kotlin.version>1.4.10</kotlin.version>
        <kotest.version>4.3.0</kotest.version>

        <!-- Those have different values based on the profile -->
        <openjfx.scope>provided</openjfx.scope>
        <pmd.module.scope>runtime</pmd.module.scope>

        <local.lib.repo>${project.basedir}/lib/mvn-repo</local.lib.repo>

        <surefire.version>3.0.0-M5</surefire.version>
        <checkstyle.version>3.1.0</checkstyle.version>
        <pmd.plugin.version>3.13.0</pmd.plugin.version>
        <javadoc.plugin.version>3.0.1</javadoc.plugin.version>
        <source.plugin.version>3.0.1</source.plugin.version>
        <jar.plugin.version>3.1.0</jar.plugin.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <pmd.build-tools.version>11</pmd.build-tools.version>
        <pmd.check.version>6.26.0</pmd.check.version>

        <jflex-output>${project.build.directory}/generated-sources/jflex</jflex-output>

    </properties>

    <build>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources/</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>**/*.less</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>de.jflex</groupId>
                <artifactId>jflex-maven-plugin</artifactId>
                <version>1.7.0</version>
                <executions>
                    <execution>
                        <id>lexer-gen</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${jflex-output}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Kotlin compiler for test-compile -->
            <!-- The kotlin plugin has to run before the java plugin-->
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>kotlin-test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <phase>process-test-sources</phase>
                        <configuration>
                            <jvmTarget>1.${java.version}</jvmTarget>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <release>${java.version}</release>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <forkMode>once</forkMode>
                    <runOrder>alphabetical</runOrder>
                </configuration>

                <dependencies>
                    <!-- Junit5 Platform Engine for Junit 3 & 4 -->
                    <dependency>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                        <version>5.6.2</version>
                    </dependency>
                    <!-- Junit5 Platform Engine for Kotlin Tests -->
                    <dependency>
                        <groupId>io.kotest</groupId>
                        <artifactId>kotest-runner-junit5-jvm</artifactId>
                        <version>${kotest.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-generated-sources</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${jflex-output}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compiles Less files into CSS files. Currently compatible with Less 1.7.0 -->
            <!-- See https://github.com/marceloverdijk/lesscss-maven-plugin -->
            <plugin>
                <groupId>org.lesscss</groupId>
                <artifactId>lesscss-maven-plugin</artifactId>
                <version>1.7.0.1.1</version>
                <configuration>
                    <sourceDirectory>${project.basedir}/src/main/resources/net/sourceforge/pmd/util/fxdesigner/less
                    </sourceDirectory>
                    <outputDirectory>${project.build.outputDirectory}/net/sourceforge/pmd/util/fxdesigner/css
                    </outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.version}</version>
                <executions>
                    <execution>
                        <id>checkstyle-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.29</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-build-tools-config</artifactId>
                        <version>${pmd.build-tools.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>/net/sourceforge/pmd/pmd-checkstyle-config.xml</configLocation>
                    <suppressionsLocation>/net/sourceforge/pmd/pmd-checkstyle-suppressions.xml</suppressionsLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <sourceDirectories>
                        <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                    </sourceDirectories>
                    <resourceIncludes>**/*.properties,**/*.less</resourceIncludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${pmd.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <linkXRef>true</linkXRef>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>1.${java.version}</targetJdk>
                    <excludeRoots>${jflex-output}</excludeRoots>
                    <rulesets>
                        <ruleset>config/pmd-check.xml</ruleset>
                    </rulesets>
                    <skipPmdError>false</skipPmdError>
                    <failurePriority>2</failurePriority>
                    <failOnViolation>true</failOnViolation>
                    <printFailingErrors>true</printFailingErrors>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-core</artifactId>
                        <version>${pmd.check.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-xml</artifactId>
                        <version>${pmd.check.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-java</artifactId>
                        <version>${pmd.check.version}</version>
                    </dependency>
                    <!-- This contains the main dogfood ruleset -->
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd-build-tools-config</artifactId>
                        <version>${pmd.build-tools.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- We need to tag the jar as multi-release since we shade-in the controlsfx -->
            <!-- multi-release jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${jar.plugin.version}</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <!-- Important for it to work on JRE 9+ -->
                            <Multi-Release>true</Multi-Release>
                            <!-- This can't work as we don't include any pmd dependencies -->
                            <!--<Main-Class>net.sourceforge.pmd.util.fxdesigner.DesignerStarter</Main-Class>-->
                        </manifestEntries>
                    </archive>
                    <finalName>pmd-ui-${project.version}</finalName>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javadoc.plugin.version}</version>
                <configuration>
                    <quiet>true</quiet>
                    <doclint>none</doclint>
                    <additionalJOptions>
                        <additionalJOption>-html5</additionalJOption>
                    </additionalJOptions>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>
                                ${project.build.outputDirectory}/net/sourceforge/pmd/util/fxdesigner/designer.properties
                            </outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <!-- if autoReleaseAfterClose is true, then the artifacts will be
                         automatically promoted to maven central -->
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <releaseProfiles>shading,sign</releaseProfiles>
                    <pushChanges>true</pushChanges>
                    <localCheckout>true</localCheckout>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <goals>deploy</goals>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>local-libs</id>
            <url>file://${local.lib.repo}</url>
        </repository>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>sonatype-nexus-plugin-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- OpenJFX dependencies are provided. OpenJFX needs to be installed separately. -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${openjfx.version}</version>
            <scope>${openjfx.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${openjfx.version}</version>
            <scope>${openjfx.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${openjfx.version}</version>
            <scope>${openjfx.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${openjfx.version}</version>
            <scope>${openjfx.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>${openjfx.version}</version>
            <scope>${openjfx.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${openjfx.version}</version>
            <scope>${openjfx.scope}</scope>
        </dependency>

        <!-- Other libraries -->

        <dependency>
            <groupId>org.fxmisc.richtext</groupId>
            <artifactId>richtextfx</artifactId>
            <version>0.9.2</version>
        </dependency>

        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>2.5.2</version>
        </dependency>

        <!-- We need two incompatible versions of controlsfx, one for Java 8, and one for Java 9+ -->
        <!-- Ideally ControlsFX would release a MR jar but that doesn't seem to be in their priorities: -->
        <!-- https://github.com/controlsfx/controlsfx/issues/1014 -->
        <!-- So we need to build it ourselves. But IntelliJ's maven integration doesn't support -->
        <!-- that very well. -->
        <!-- The simplest way I found to have it work both in the IDE and in the shaded jar -->
        <!-- is to build and deploy locally a multi-release jar. -->
        <!-- Previously the maven build created that Jar, but the IDE was confused and couldn't run the project -->
        <!-- on JRE 9. -->

        <!-- Using a parent pom and a submodule for the cfx jar doesn't work in IntelliJ and -->
        <!-- would force us to release to maven central, so to respect all their restrictions. -->

        <!-- Unless controlsfx releases its own MR jar, we have to rebuilt that local jar each time we -->
        <!-- want an update (there's a pom provided in the lib dir for that). -->

        <dependency>
            <groupId>org.controlsfx.custom</groupId>
            <artifactId>controlsfx-mr-jar</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.oowekyala</groupId>
            <artifactId>fx-live-templates</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Those are shaded to avoid duplication -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>


        <!-- Icon packs -->
        <!-- Unfortunately these can't be updated as the author now uses Java 11...-->
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome5-pack</artifactId>
            <version>2.4.0</version>
        </dependency>

        <!-- PMD dependencies -->
        <!-- All those are "provided" to exclude them from the shaded jar -->
        <!-- When importing project in an IDE, the profiles updates their scope to compile/runtime -->
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${pmd.core.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-apex</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <!-- Only depend on 2.13 -->
            <artifactId>pmd-scala_2.13</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-javascript</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-jsp</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-plsql</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-visualforce</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-vm</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-xml</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-modelica</artifactId>
            <version>${pmd.core.version}</version>
            <optional>true</optional>
            <scope>${pmd.module.scope}</scope>
        </dependency>

        <!-- TEST DEPENDENCIES -->

        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-lang-test</artifactId>
            <version>${pmd.core.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.6.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Contains stuff like FunSpec, etc -->
            <groupId>io.kotest</groupId>
            <artifactId>kotest-runner-junit5-jvm</artifactId>
            <version>${kotest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.oowekyala.treeutils</groupId>
            <artifactId>tree-matchers</artifactId>
            <version>2.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.oowekyala.treeutils</groupId>
            <artifactId>tree-printers</artifactId>
            <version>2.1.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>shading</id>
            <!-- This profile is NOT active by default, so that import
                 in IDEs work properly. This is the one to use to build
                 the JAR that is included in the PMD's distribution.

                 Do not use in conjunction with -Prunning.
                 -->
            <properties>
                <!-- Marks those modules as "provided" to exclude them from the shaded jar -->
                <!-- pmd-core is handled separately below -->
                <pmd.module.scope>provided</pmd.module.scope>
                <openjfx.scope>provided</openjfx.scope>
            </properties>
            <build>
                <plugins>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>3.2.1</version>
                        <configuration>

                            <!-- We can't just use an artifactSet/excludes to exclude pmd dependencies -->
                            <!-- because it would include their transitive dependencies -->

                            <relocations>
                                <!-- Relocate apache dependencies because they're included in the binary dist-->
                                <relocation>
                                    <pattern>org.apache.commons</pattern>
                                    <shadedPattern>org.shaded.apache.commons</shadedPattern>
                                </relocation>
                            </relocations>

                            <!-- Merge resource provider files like Ikonli icon resolvers -->
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            </transformers>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>net.sourceforge.pmd</groupId>
                    <artifactId>pmd-core</artifactId>
                    <version>${pmd.core.version}</version>
                    <!-- Marks pmd-core modules as "provided" to exclude them from the shaded jar -->
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>sign</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- https://issues.apache.org/jira/browse/MGPG-59 - once m-gpg-p 1.7. is released,
                                         this should not be needed anymore -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- This is a runnable profile that includes all pmd modules -->
            <id>running</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>net.sourceforge.pmd.util.fxdesigner.DesignerStarter</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- This profile adds openjfx dependencies to the classpath -->
            <!-- Eg use -Prun,with-javafx -->
            <id>with-javafx</id>
            <properties>
                <openjfx.scope>runtime</openjfx.scope>
            </properties>
        </profile>

    </profiles>

</project>
